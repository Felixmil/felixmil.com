{
  "hash": "4a1abd139c84ccce8a72a7b775c0b67b",
  "result": {
    "markdown": "---\ntitle: \"Advent of Code - Day 2: Rock Paper Scissors\"\nsubtitle: \"Second day of the advent of code using R\"\ndate: 2022-12-02\ncategories: \"advent of code\"\nformat: \n   html:\n     df-print: paged\neditor: \n  markdown: \n    wrap: 80\n---\n\n\n\n\n# Part 1\n\n## Challenge\n\n> --- Day 2: Rock Paper Scissors ---\n>\n> The Elves begin to set up camp on the beach. To decide whose tent gets to be\n> closest to the snack storage, a giant Rock Paper Scissors tournament is\n> already in progress.\n>\n> Rock Paper Scissors is a game between two players. Each game contains many\n> rounds; in each round, the players each simultaneously choose one of Rock,\n> Paper, or Scissors using a hand shape. Then, a winner for that round is\n> selected: Rock defeats Scissors, Scissors defeats Paper, and Paper defeats\n> Rock. If both players choose the same shape, the round instead ends in a draw.\n>\n> Appreciative of your help yesterday, one Elf gives you an encrypted strategy\n> guide (your puzzle input) that they say will be sure to help you win. \"The\n> first column is what your opponent is going to play: A for Rock, B for Paper,\n> and C for Scissors. The second column--\" Suddenly, the Elf is called away to\n> help with someone's tent.\n>\n> The second column, you reason, must be what you should play in response: X for\n> Rock, Y for Paper, and Z for Scissors. Winning every time would be suspicious,\n> so the responses must have been carefully chosen.\n>\n> The winner of the whole tournament is the player with the highest score. Your\n> total score is the sum of your scores for each round. The score for a single\n> round is the score for the shape you selected (1 for Rock, 2 for Paper, and 3\n> for Scissors) plus the score for the outcome of the round (0 if you lost, 3 if\n> the round was a draw, and 6 if you won).\n>\n> Since you can't be sure if the Elf is trying to help you or trick you, you\n> should calculate the score you would get if you were to follow the strategy\n> guide.\n>\n> For example, suppose you were given the following strategy guide:\n>\n> A Y B X C Z This strategy guide predicts and recommends the following:\n>\n> In the first round, your opponent will choose Rock (A), and you should choose\n> Paper (Y). This ends in a win for you with a score of 8 (2 because you chose\n> Paper + 6 because you won). In the second round, your opponent will choose\n> Paper (B), and you should choose Rock (X). This ends in a loss for you with a\n> score of 1 (1 + 0). The third round is a draw with both players choosing\n> Scissors, giving you a score of 3 + 3 = 6. In this example, if you were to\n> follow the strategy guide, you would get a total score of 15 (8 + 1 + 6).\n>\n> What would your total score be if everything goes exactly according to your\n> strategy guide?\n\n## Input\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- readLines(\"input.txt\")\n\nhead(input, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"A Z\" \"A Y\" \"B X\" \"B X\" \"C X\" \"B X\" \"A X\" \"A X\" \"C X\" \"A X\"\n```\n:::\n:::\n\n\n## Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(purrr)\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchoices = c(\"rock\", \"paper\", \"scissors\")\n\ntranslate <- function(letter){\n  if(letter %in% c(\"A\", \"X\")) 1L #rock\n  else if(letter %in% c(\"B\", \"Y\")) 2L #paper\n  else if(letter %in% c(\"C\", \"Z\")) 3L #scissors\n}\n  \n  \nget_round_score <- function(opponent, player) {\n\n  if (opponent == player) {\n    bonus = +3\n  } else if ((player > opponent | (player == 1 & opponent == 3)) & !(player == 3 & opponent == 1)) {\n    bonus = +6\n  } else {\n    bonus = 0\n  }\n  \n  return(player + bonus)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_score <- 0\n\nfor (scenario in strsplit(input, \" \")) {\n  translated <- map_int(scenario, translate)\n  opponent = translated[1]\n  player = translated[2]\n  \n  round_score <- get_round_score(opponent, player)\n  \n  total_score <- total_score + round_score\n  \n}\n```\n:::\n\n\n## Result\n\nTotal score obtained with the scenarios is\n**11150**.\n\n# Part 2\n\n## Challenge\n\n> \\-\\-- Part Two \\-\\--\n>\n> The Elf finishes helping with the tent and sneaks back over to you. \"Anyway,\n> the second column says how the round needs to end: `X` means you need to lose,\n> `Y` means you need to end the round in a draw, and `Z` means you need to win.\n> Good luck!\"\n>\n> The total score is still calculated in the same way, but now you need to\n> figure out what shape to choose so the round ends as indicated. The example\n> above now goes like this:\n>\n> -   In the first round, your opponent will choose Rock (`A`), and you need the\n>     round to end in a draw (`Y`), so you also choose Rock. This gives you a\n>     score of 1 + 3 = *4*.\n>\n> -   In the second round, your opponent will choose Paper (`B`), and you choose\n>     Rock so you lose (`X`) with a score of 1 + 0 = *1*.\n>\n> -   In the third round, you will defeat your opponent's Scissors with Rock for\n>     a score of 1 + 6 = *7*.\n>\n> Now that you're correctly decrypting the ultra top secret strategy guide, you\n> would get a total score of *`12`*.\n>\n> Following the Elf's instructions for the second column, *what would your total\n> score be if everything goes exactly according to your strategy guide?*\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutcomes = c(\"lost\", \"draw\", \"win\")\n\nget_round_score_2 <- function(opponent, outcome) {\n\n  if (outcome == 2) {\n    bonus = 3\n    player = opponent\n  } else if(outcome == 1){\n    bonus = 0\n    if (opponent == 1) {\n      player = 3\n    } else {\n      player = opponent - 1\n    }\n  } else if(outcome == 3){\n    bonus = 6\n    if (opponent == 3) {\n      player = 1\n    } else {\n      player = opponent + 1\n    }\n  }\n\n  return(player + bonus)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_score_2 <- 0\n\nfor (scenario in strsplit(input, \" \")) {\n  translated <- map_int(scenario, translate)\n  opponent = translated[1]\n  outcome = translated[2]\n  \n  round_score <- get_round_score_2(opponent, outcome)\n  \n  total_score_2 <- total_score_2 + round_score\n  \n}\n```\n:::\n\n\n## Result\n\nTotal score obtained with the scenarios is\n**8295**.\n",
    "supporting": [
      "rock-paper-scissors_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}