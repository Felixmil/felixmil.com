{
  "hash": "1b21f6358cb291460e9b26e99a7dd46a",
  "result": {
    "markdown": "---\ntitle: \"Advent of Code - Day 4: Camp Cleanup\"\nsubtitle: \"Fourth day of the advent of code using R\"\ndate: 2022-12-04\ncategories: \"advent of code\"\nformat: \n   html:\n     df-print: paged\neditor: \n  markdown: \n    wrap: 80\n---\n\n\n\n\n\n# Part 1\n## Input\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- readLines(\"input.txt\")\n\nhead(input, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"7-24,8-8\"    \"2-75,37-51\"  \"47-78,20-39\" \"53-91,34-53\" \"13-50,14-50\"\n [6] \"93-93,20-93\" \"74-80,48-81\" \"30-87,27-38\" \"6-93,7-94\"   \"56-98,12-49\"\n```\n:::\n:::\n\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to count the number of overlapping pairs\ncount_overlapping_pairs <- function(pairs) {\n  # Initialize a counter variable\n  count <- 0\n\n  # Loop through each pair\n  for (pair in pairs) {\n    # Split the pair into its start and end parts\n    parts <- unlist(strsplit(pair, \",\"))\n    \n    first_elf <- as.numeric(unlist(strsplit(parts[1], \"-\")))\n    second_elf <-  as.numeric(unlist(strsplit(parts[2], \"-\")))\n    \n    first_set <- c(first_elf[1]:first_elf[2])\n    second_set <- c(second_elf[1]:second_elf[2])\n    \n    \n    if (identical(first_set[first_set %in% second_set],first_set) || identical(second_set[second_set %in% first_set],second_set)) {\n      count <- count + 1\n    }\n  }\n\n  # Return the count\n  return(count)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult <- count_overlapping_pairs(input)\n```\n:::\n\n\n\n## Result\n\nThere are a total of **562** overlapping pairs.\n",
    "supporting": [
      "camp-cleanup_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}